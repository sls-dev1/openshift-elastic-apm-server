apm-server:
  # Defines the host and port the server is listening on.  use "unix:/path/to.sock" to listen on a unix domain socket.
  host: "localhost:8200"
  
  # A pipeline is a definition of processors applied to documents when ingesting them to Elasticsearch.
  # Using pipelines involves two steps:
  # (1) registering a pipeline
  # (2) applying a pipeline during data ingestion (see `output.elasticsearch.pipeline`)
  #
  # You can manually register a pipeline, or use this configuration option to ensure
  # the pipeline is loaded and registered at the configured Elasticsearch instances.
  # Find the default pipeline configuration at `ingest/pipeline/definition.json`.
  # Automatic pipeline registration requires the output.elasticsearch` to be enabled and configured.
  register.ingest.pipeline:
    # Registers APM pipeline definition in Elasticsearch on APM Server startup. Defaults to true.
    enabled: false
    # Overwrites existing APM pipeline definition in Elasticsearch. Defaults to false.
    #overwrite: false

#==================== Elasticsearch template setting ==========================

# Elasticsearch template settings
setup.template.settings:

  # A dictionary of settings to place into the settings.index dictionary
  # of the Elasticsearch template. For more details, please check
  # https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html
  index:
    number_of_shards: 1
    codec: best_compression
    #number_of_routing_shards: 30

#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  # Scheme and port can be left out and will be set to the default (http and 9200)
  # In case you specify and additional path, the scheme is required: http://localhost:9200/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:9200
  hosts: ["logging-es:9200"]
  
  # Optional protocol and basic auth credentials.
  protocol: "https"
  #username: "elastic"
  #password: "changeme"
  ssl.enabled: true
  ssl.verification_mode: none
  ssl.certificate_authorities: 
    - /etc/pki/ca
  ssl.certificate: "/etc/pki/cert" 
  ssl.key: "/etc/pki/key" 

  indices:
    - index: "apm-%{[beat.version]}-sourcemap"
      when.contains:
        processor.event: "sourcemap"

    - index: "apm-%{[beat.version]}-error-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "error"

    - index: "apm-%{[beat.version]}-transaction-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "transaction"

    - index: "apm-%{[beat.version]}-span-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "span"

    - index: "apm-%{[beat.version]}-metric-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "metric"

    - index: "apm-%{[beat.version]}-onboarding-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "onboarding"

logging.metrics.enabled: false
